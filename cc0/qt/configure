#!/bin/sh
#
# simple config script for system-dependent build options
#

QTBUILDDIR="\$(DEPTH)/qtbuild"

if qmake --version 2>/dev/null |grep -q 'Qt version 4\.6'; then
    QMAKE_BIN=qmake
    BUILD_QT=no
elif qmake-qt4 --version 2>/dev/null |grep -q 'Qt version 4\.6'; then
    QMAKE_BIN=qmake-qt4
    BUILD_QT=no
else
    QMAKE_BIN=$QTBUILDDIR/bin/qmake
    BUILD_QT=yes
fi

# configure qmake to build a Makefile on a mac instead of an Xcode project
case `uname -s` in
    Darwin)
      QMAKE_FLAGS='-makefile -spec macx-g++'
      PLATFORM=osx
      DLLSUFFIX=.dylib
      ;;
    *)
      QMAKE_FLAGS='-makefile'
      PLATFORM=linux
      DLLSUFFIX=.so
      ;;
esac

MACHINE=x86
case `uname -m` in
i*86) MACHINE=x86; ;;
x86_64) MACHINE=x86_64; ;;
*) echo "Unknown machine type! Assuming x86..." ;;
esac

if [ $BUILD_QT = "yes" ]
then
  QT_BIN=$QTBUILDDIR/bin
  QT_INCLUDE=$QTBUILDDIR/include
  QT_LIB=$QTBUILDDIR/lib
else
  QT_BIN=`$QMAKE_BIN -query QT_INSTALL_BINS`
  QT_INCLUDE=`$QMAKE_BIN -query QT_INSTALL_HEADERS`
  QT_LIB=`$QMAKE_BIN -query QT_INSTALL_LIBS`
fi

DIR=`dirname $0`

# write to config.mk
echo "Writing config.mk ..."
cat >$DIR/config.mk <<EOF
########################################################
### automatically generated by $0
### (probably best not to edit by hand..)

BUILD_QT = $BUILD_QT
QMAKE = $QMAKE_BIN $QMAKE_FLAGS
QTBUILDDIR = $QTBUILDDIR
QT_BIN = $QT_BIN
QT_INCLUDE = $QT_INCLUDE
QT_LIB = $QT_LIB
PLATFORM = $PLATFORM
DLLSUFFIX = $DLLSUFFIX
MACHINE = $MACHINE
EOF
