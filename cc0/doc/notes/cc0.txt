Some short notes on the internal of the cc0
compiler, especially for runtimes and libraries
Rob Arnold, William Lovas, Frank Pfenning
September 7, 2010

include/cc0lib.h declares the functions avoiding C's imprecise
semantics and provides macros to prettify code-generation.
TODO: rename functions to be consistent

Each $rt (bare, c0rt, unsafe)
defines a file $rt/$rt.h (which eventually will be in runtime/$rt.h)

It defines types

bool
c0_array
c0_char
c0_string

and includes include/c0runtime.h

Some functions declared in c0runtime.h, provide functionality for
the compiler (e.g., c0_string_fromliteral), others provide functionality
for libraries (e.g., c0_string_fromcstr).

Each $rt must produce a lib$rt.xx (where xx = so for Linux,
xx = dylib for Mac OS X); on Windows it would be $rt.dll.

Common makefile lib.mk, to be included in the Makefile for
each runtime (and library).  Define a few variables before
including lib.mk:
LIBNAME = name of the library = $rt, compile cc0 -r<LIBNAME>
SOURCES = space separated source files (.c, .cpp, .sml, ...)
DEPTH = rel path from Makefile to lib.mk
REQUIRES = <lib1> ... <libn> (space-separated) knows about QtCore, QtGui, gc
    runtimes only on gc or nothing, libraries on anything (but not circular)
======================================================================
Library
======================================================================
Library foo.
- create libs/foo
- create libs/foo/Makefile, using rules laid out above
- create libs/foo/foo.h0 (will be copied to lib/foo.h0)
