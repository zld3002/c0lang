//test return 10619390

#use <string>
#use <conio>

/* arrays of function pointer */

typedef
int c2i(char c);

int digit(char c) {
  return char_ord(c)-char_ord('0');
}

int upper(char c) {
  return char_ord(c)-char_ord('A')+10;
}

int lower(char c) {
  return char_ord(c)-char_ord('a')+10;
}

int illegal(char c) {
  error("illegal character");
}

void init (c2i*[] A)
//@requires \length(A) >= 128;
{
  for (int i = char_ord('0'); i <= char_ord('9'); i++)
    A[i] = &digit;
  for (int i = char_ord('A'); i <= char_ord('Z'); i++)
    A[i] = &upper;
  for (int i = char_ord('a'); i <= char_ord('z'); i++)
    A[i] = &lower;
}

int main() {
  c2i*[] A = alloc_array(c2i*, 128);
  init(A);
  string test = "A209Fe";
  int n = string_length(test);
  int hex = 0;
  for (int i = 0; i < n; i++) {
    char c = string_charat(test, i);
    assert(A[char_ord(c)] != NULL); /* should be contract */
    hex = hex*16 + (*A[char_ord(c)])(c);
  }
  /* printint(hex); print("\n"); */
  assert(hex == 0xA209Fe);
  return hex;
}
