/* Testing linear and binary search
 * Frank Pfenning, Fall 2010
 */

#use <conio>
#use <rand>
#use <util>

int main () {
  int seed = 0x8badf00d;
  rand_t gen = init_rand(seed);
  int n = (1<<10)-1;		/* size of array */
  int num_tests = 100;		/* number of tests to run */
  int[] A = alloc_array(int, n);

  print("Testing search with "); printint(n); print(" elements, ");
  printint(num_tests); print(" times\n");

  /* generated sorted array */
  A[0] = 0;
  for (int i = 0; i < n-1; i++)
    //@loop_invariant 0 <= i && i <= n-1;
    {
      int dx = abs(rand(gen) % (int_max()/n));
      if (abs(rand(gen) % 8) != 0) dx = 0;  // create some duplicates
      A[i+1] = A[i]+dx;
    }

  assert(is_sorted(A, n));

  /* testing search */
  for (int i = 0; i < num_tests; i++) {
    int j = abs(rand(gen) % n);
    assert(A[linsearch(A[j], A, n)] == A[j]);
  }

  for (int i = 0; i < num_tests; i++) {
    int x = rand(gen);
    linsearch(x, A, n);
  }

  println("find passed");
  println("Passed all tests!");
  return 0;
}
