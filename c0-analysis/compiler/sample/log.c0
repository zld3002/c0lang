int log (int n)
//@requires n >= 1;
//@ensures n/2 < (1<<\result) && (1<<\result) <= n;
{
  int i = 0;
  int k = n;
  while (k > 1)
    //@loop_invariant k >= 1;
    //@loop_invariant n/2 < (1<<i) * k && (1<<i) * k <= n;
    {
      k = k / 2;
      i = i + 1;
    }
  return i;
}

int main () {
  assert(log(1) == 0, "1");
  assert(log(2) == 1, "2");
  assert(log(3) == 1, "3");
  assert(log(4) == 2, "4");
  assert(log(1023) == 9, "1023");
  assert(log(1024) == 10, "1024");
  assert(log(1025) == 10, "1024");
  assert(log(1<<1) == 1, "1<<1");
  assert(log(1<<5) == 5, "1<<1");
  assert(log(1<<10) == 10, "1<<1");
  assert(log((1<<29)+1) == 29, "1<<29+1");
  assert(log((1<<29)) == 29, "1<<29");
  assert(log((1<<29)-1) == 28, "1<<29-1");
  return 0;
}
