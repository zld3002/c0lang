#include "c0.h"

#ifndef _FILE_H0
#define _FILE_H0

// A handle to a file on the disk. This handle contains an internal position
// which ranges from 0 to the logical size of the file in bytes.
struct file;
typedef struct file* file_t;

// Creates a handle for reading from the file given by the specified path. If
// the file cannot be opened for reading, the program aborts.
file_t file_read(string path);

// Releases any resources associated with the file handle. This function should
// not be invoked twice on the same handle.
void file_close(file_t f);

// Returns true if the internal position of the handle is the size of the file.
bool file_eof(file_t f);

// Reads a line from the given file, advancing the handle's internal position
// by the number of characters in the returned string plus the delimeters.
// Lines are denoted by the \n or \r\n characters or the end of the file.
string file_readline(file_t f)
//@ requires !file_eof(f);
  ;

#endif /* _FILE_H0 */
