#ifndef _STRING_H0
#define _STRING_H0

// Returns the length of the given string
int string_length(string s);

// Returns the character at the given index of the string. If the index is out
// of range, aborts.
char string_charat(string a, int idx);

// Returns a new string that is the result of concatenating b to a.
string string_join(string a, string b);

// Returns the substring composed of the characters of s beginning at index
// given by start and continuing up to but not including the index given by end
// If end <= start, the empty string is returned
// If end < 0 or end > the length of the string, it is treated as though it
//   were equal to the length of the string.
// If start < 0 the empty string is returned.
string string_sub(string a, int start, int end);

bool string_equal(string a, string b);
int string_compare(string a, string b);

bool char_equal(char a, char b);
int char_compare(char a, char b);

string string_frombool(bool b);
string string_fromint(int i);
string string_fromchar(char c);

string string_tolower(string s);
char * string_to_chararray(string s);
string string_from_chararray(char * A);
int char_ord(char c);
char char_chr(int n);

#endif /* _STRING_H0 */
