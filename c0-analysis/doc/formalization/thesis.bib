@book{JavaSpec,
  address = {Amsterdam},
  author = {James Gosling and Bill Joy and Guy Steele and Gilad Bracha},
  day = 28,
  edition = 3,
  interhash = {8a2d505d75cf9f9897348937116fc4e7},
  intrahash = {7ecc3fb9b3f3b3c322b372c99b0dfa2b},
  pages = 688,
  publisher = {Addison-Wesley Longman},
  title = {The Java Language Specification, Third Edition},
  year = 2005,
  ean = {9780321246783},
  keywords = {Java Language PhD Proposal Specification VM},
  added-at = {2008-08-17T11:10:36.000+0200},
  asin = {0321246780},
  biburl = {http://www.bibsonomy.org/bibtex/27ecc3fb9b3f3b3c322b372c99b0dfa2b/gron},
  dewey = {005.133},
  month = {June}
}
@book{mthm97,
    abstract = {Standard ML is a general-purpose programming language designed
for large projects. This book provides a formal definition of Standard ML for
the benefit of all concerned with the language, including users and
implementers. Because computer programs are increasingly required to withstand
rigorous analysis, it is all the more important that the language in which they
are written be defined with full rigor.<br /> <br /> One purpose of a language
definition is to establish a theory of meanings upon which the understanding of
particular programs may rest. To properly define a programming language, it is
necessary to use some form of notation other than a programming language. Given
a concern for rigor, mathematical notation is an obvious choice. The authors
have defined their semantic objects in mathematical notation that is completely
independent of Standard ML.<br /> <br /> In defining a language one must also
define the rules of evaluation precisely--that is, define what meaning results
from evaluating any phrase of the language. The definition thus constitutes a
formal specification for an implementation. The authors have developed enough of
their theory to give sense to their rules of evaluation.<br /> <br /> <I>The
Definition of Standard ML</I> is the essential point of reference for Standard
ML. Since its publication in 1990, the implementation technology of the language
has advanced enormously and the number of users has grown. The revised edition
includes a number of new features, omits little-used features, and corrects
mistakes of definition.},
    author = {Milner, Robin and Tofte, Mads and Harper, Robert and Macqueen,
David},
    citeulike-article-id = {113339},
    day = {15},
    edition = {Rev Sub},
    howpublished = {Paperback},
    keywords = {standard-ml},
    month = {May},
    posted-at = {2008-03-05 17:04:44},
    priority = {0},
    publisher = {The MIT Press},
    title = {The Definition of Standard ML - Revised},
    url = {http://www.worldcat.org/isbn/0262631814},
    year = {1997}
}
@book{Ecma334,
  author = {ECMA International},
  edition = 4,
  interhash = {dd1b6725215ded3cb0da5d31de3bca19},
  intrahash = {314274f40c8799c3c8a3baec7d24ab50},
  title = {Standard ECMA-334 - C# Language Specification},
  url = {http://www.ecma-international.org/publications/standards/Ecma-334.htm},
  year = 2006,
  keywords = {.NET C# CLI Language PhD Proposal Specification Standard},
  added-at = {2008-09-05T14:43:42.000+0200},
  biburl = {http://www.bibsonomy.org/bibtex/2314274f40c8799c3c8a3baec7d24ab50/gron},
  month = {June}
}
@techreport{ISO:C99,
  author = {ISO},
  editor = { WG14},
  interhash = {fd8756a3957faf0ec6a78712ab07b4d7},
  intrahash = {65e4793fc06145226ea203f821b0cd8d},
  note = {ISO/IEC 9899:1999 draft},
  title = {{ISO} {C} Standard 1999},
  url = {http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf},
  year = 1999,
  keywords = {c c99 iso standard},
  added-at = {2007-02-10T16:23:05.000+0100},
  description = {C Language ISO 1999},
  biburl = {http://www.bibsonomy.org/bibtex/265e4793fc06145226ea203f821b0cd8d/mobileink},
  abstract = {This is the "combined C99 + TC1 + TC2, WG14 N1124, dated 2005-05-06. This is a WG14 working paper, but it reflects the consolidated standard at the time of issue."}
}
@MISC{Necula02ccured,
    author = {George C. Necula and Scott McPeak and Westley Weimer},
    title = { CCured: Type-Safe Retrofitting of Legacy Code},
    year = {2002}
}
@article{BoehmGC,
 author = {Boehm, Hans-Juergen and Weiser, Mark},
 title = {Garbage collection in an uncooperative environment},
 journal = {Software Practice \& Experience},
 volume = {18},
 number = {9},
 year = {1988},
 pages = {807--820},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}
@article{GrossmanHJM04,
  author = {Dan Grossman and Michael Hicks and Trevor Jim and Greg Morrisett},
  title = {Cyclone: A Type-Safe Dialect of {C}},
  journal = {C/C++ User's Journal},
  volume = {23},
  number = {1},
  month = {January},
  year = {2005},
  pdf = {http://www.eecs.harvard.edu/~greg/papers/cuj.pdf}
}
@book{DLang,
  author = {Andrei Alexandrescu},
  title = {The D Programming Language},
  publisher = {Addison-Wesley Professional},
  year = {2010},
  month = {June}
}
@article{Boehm95ropes,
 author = {Hans-J. Boehm and Russ Atkinson and Michael Plass},
 title = {Ropes: an Alternative to Strings},
 journal = {Software Practice \& Experience},
 volume = {25},
 number = {12},
 month = {December},
 year = {1995},
 pages = {1315--1330}
}
@book{ecma2006ead,
  title = {{ECMA-367}: {Eiffel} analysis, design and programming language},
  publisher = {ECMA (European Association for Standardizing Information and Communication
  Systems)},
  year = {2006},
  author = {{ECMA}},
  address = {Geneva, Switzerland},
  month = {June},
  note = {2006},
  url = {http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-367.pdf}
}
@article{Henderson2007Computational,
  address = {New York, NY, USA},
  author = {Henderson, Peter B. and Cortina, Thomas J. and Wing, Jeannette M.},
  citeulike-article-id = {5743524},
  citeulike-linkout-0 = {http://portal.acm.org/citation.cfm?id=1227504.1227378},
  journal = {SIGCSE Bull.},
  keywords = {computational, ei-lit, thinking},
  number = {1},
  pages = {195--196},
  posted-at = {2009-09-08 17:14:03},
  priority = {2},
  publisher = {ACM},
  title = {Computational thinking},
  url = {http://dx.doi.org/10.1145/1227504.1227378},
  volume = {39},
  year = {2007}
}
@inproceedings{SAFECode,
 author = {Dinakar Dhurjati and Sumant Kowshik and Vikram Adve},
 title = {SAFECode: enforcing alias analysis for weakly typed languages},
 booktitle = {PLDI '06: Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation},
 year = {2006},
 pages = {144--157},
 location = {Ottawa, Ontario, Canada},
 publisher = {ACM},
 address = {New York, NY, USA},
}
@Unpublished{Leavens-Cheon05,
  author =  "Gary T. Leavens and Yoonsik Cheon",
  title = "Design by Contract with {JML}",
  year =  "2005",
  note =  "Draft, available from jmlspecs.org.",
  URL =   "ftp://ftp.cs.iastate.edu/pub/leavens/JML/jmldbc.pdf",
  annote =  "12 references.",
}
@misc{GoLang,
  key = {Go},
  title = {The {Go} Programming Language},
  url = "http://golang.org/doc/go_spec.html"
}
@article{CycloneUnions,
  author = {Grossman, Dan},
  title = {Quantified types in an imperative language},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume = {28},
  number = {3},
  year = {2006},
  pages = {429--475},
  publisher = {ACM},
  address = {New York, NY, USA},
}
@misc{PrincetonJavaLibs,
  key={PrJavaLibs},
  title = {Standard Libraries},
  url = "http://www.cs.princeton.edu/introcs/stdlib/"
}
@inproceedings{Processing,
 author = {Reas, Casey and Fry, Benjamin},
 title = {Processing.org: programming for artists and designers},
 booktitle = {SIGGRAPH '04: ACM SIGGRAPH 2004 Web graphics},
 year = {2004},
 pages = {3},
 location = {Los Angeles, California},
 publisher = {ACM},
 address = {New York, NY, USA},
}
